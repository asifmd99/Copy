import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.ws.client.core.WebServiceTemplate;
import org.springframework.ws.transport.http.HttpComponentsMessageSender;

@Configuration
public class SoapClientConfig {

    @Bean
    public WebServiceTemplate webServiceTemplate() {
        WebServiceTemplate webServiceTemplate = new WebServiceTemplate();
        webServiceTemplate.setDefaultUri("http://example.com/your-soap-api-endpoint");
        webServiceTemplate.setMessageSender(httpComponentsMessageSender());
        return webServiceTemplate;
    }

    @Bean
    public HttpComponentsMessageSender httpComponentsMessageSender() {
        return new HttpComponentsMessageSender();
    }
}

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.ws.client.core.WebServiceTemplate;
import example.com.your.generated.package.YourRequestClass;
import example.com.your.generated.package.YourResponseClass;

@Service
public class SoapClientService {

    @Autowired
    private WebServiceTemplate webServiceTemplate;

    public YourResponseClass callSoapService(YourRequestClass request) {
        return (YourResponseClass) webServiceTemplate.marshalSendAndReceive(request);
    }
}
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.stereotype.Service;
import example.com.your.generated.package.YourRequestClass;
import example.com.your.generated.package.YourResponseClass;

@Service
public class KafkaConsumerService {

    @Autowired
    private SoapClientService soapClientService;

    @KafkaListener(topics = "your_topic", groupId = "group_id", containerFactory = "kafkaListenerContainerFactory")
    public void consume(UserMessage message) {
        // Create a request object for the SOAP service
        YourRequestClass request = new YourRequestClass();
        // Populate the request object using the message fields
        request.setSomeField(message.getSomeField());

        // Call the SOAP service
        YourResponseClass response = soapClientService.callSoapService(request);

        // Merge the response into the UserMessage object
        message.setResponseField(response.getResponseField());

        // Process the updated UserMessage object as needed
        processUserMessage(message);
    }

    private void processUserMessage(UserMessage message) {
        // Implement your processing logic here
    }
}


---------------HOw to configure kafka  for multiple type of  serialiser deserialiser
Understand grouping in kafka consumer 
---------------Flow ----------
 AdminClientConfig values: 
kafka commid id stuff
consumerconfig values
Group was my group - client.id = consumer-myGroup-1
Kafka commiitid,consumerconfig
